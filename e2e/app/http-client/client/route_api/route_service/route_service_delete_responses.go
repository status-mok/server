// Code generated by go-swagger; DO NOT EDIT.

package route_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/status-mok/server/e2e/app/http-client/models"
)

// RouteServiceDeleteReader is a Reader for the RouteServiceDelete structure.
type RouteServiceDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RouteServiceDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRouteServiceDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewRouteServiceDeleteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRouteServiceDeleteOK creates a RouteServiceDeleteOK with default headers values
func NewRouteServiceDeleteOK() *RouteServiceDeleteOK {
	return &RouteServiceDeleteOK{}
}

/*
RouteServiceDeleteOK describes a response with status code 200, with default header values.

A successful response.
*/
type RouteServiceDeleteOK struct {
	Payload *models.RouteServiceDeleteResponse
}

// IsSuccess returns true when this route service delete o k response has a 2xx status code
func (o *RouteServiceDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this route service delete o k response has a 3xx status code
func (o *RouteServiceDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this route service delete o k response has a 4xx status code
func (o *RouteServiceDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this route service delete o k response has a 5xx status code
func (o *RouteServiceDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this route service delete o k response a status code equal to that given
func (o *RouteServiceDeleteOK) IsCode(code int) bool {
	return code == 200
}

func (o *RouteServiceDeleteOK) Error() string {
	return fmt.Sprintf("[POST /route/delete][%d] routeServiceDeleteOK  %+v", 200, o.Payload)
}

func (o *RouteServiceDeleteOK) String() string {
	return fmt.Sprintf("[POST /route/delete][%d] routeServiceDeleteOK  %+v", 200, o.Payload)
}

func (o *RouteServiceDeleteOK) GetPayload() *models.RouteServiceDeleteResponse {
	return o.Payload
}

func (o *RouteServiceDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RouteServiceDeleteResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRouteServiceDeleteDefault creates a RouteServiceDeleteDefault with default headers values
func NewRouteServiceDeleteDefault(code int) *RouteServiceDeleteDefault {
	return &RouteServiceDeleteDefault{
		_statusCode: code,
	}
}

/*
RouteServiceDeleteDefault describes a response with status code -1, with default header values.

RouteServiceDeleteDefault route service delete default
*/
type RouteServiceDeleteDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// Code gets the status code for the route service delete default response
func (o *RouteServiceDeleteDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this route service delete default response has a 2xx status code
func (o *RouteServiceDeleteDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this route service delete default response has a 3xx status code
func (o *RouteServiceDeleteDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this route service delete default response has a 4xx status code
func (o *RouteServiceDeleteDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this route service delete default response has a 5xx status code
func (o *RouteServiceDeleteDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this route service delete default response a status code equal to that given
func (o *RouteServiceDeleteDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *RouteServiceDeleteDefault) Error() string {
	return fmt.Sprintf("[POST /route/delete][%d] RouteService_Delete default  %+v", o._statusCode, o.Payload)
}

func (o *RouteServiceDeleteDefault) String() string {
	return fmt.Sprintf("[POST /route/delete][%d] RouteService_Delete default  %+v", o._statusCode, o.Payload)
}

func (o *RouteServiceDeleteDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *RouteServiceDeleteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
