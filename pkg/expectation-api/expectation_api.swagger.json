{
  "swagger": "2.0",
  "info": {
    "title": "expectation-api/expectation_api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ExpectationService"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/expectation/create": {
      "post": {
        "summary": "Create",
        "operationId": "ExpectationService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ExpectationServiceCreateResponse"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/rpcStatus",
              "example": {
                "code": 5,
                "message": "not found"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpectationServiceCreateRequest"
            }
          }
        ],
        "tags": [
          "ExpectationService"
        ]
      }
    },
    "/expectation/delete": {
      "post": {
        "summary": "Delete",
        "operationId": "ExpectationService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ExpectationServiceDeleteResponse"
            }
          },
          "default": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/rpcStatus",
              "example": {
                "code": 5,
                "message": "not found"
              }
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExpectationServiceDeleteRequest"
            }
          }
        ],
        "tags": [
          "ExpectationService"
        ]
      }
    }
  },
  "definitions": {
    "ExpectationServiceCreateRequest": {
      "type": "object",
      "properties": {
        "server_name": {
          "type": "string",
          "example": "http-server-8080",
          "description": "Server name is a unique identifier of the mock server.",
          "minLength": 1
        },
        "route_url": {
          "type": "string",
          "example": "/some-url",
          "description": "Route URL is a relative URI of the route.",
          "minLength": 1
        },
        "id": {
          "type": "string",
          "example": "95423706-1d7c-431b-b182-3b95eb63310b",
          "description": "ID is a unique identifier of expectation.",
          "minLength": 1
        }
      },
      "required": [
        "server_name",
        "route_url"
      ]
    },
    "ExpectationServiceCreateResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "ExpectationServiceDeleteRequest": {
      "type": "object",
      "properties": {
        "server_name": {
          "type": "string",
          "example": "http-server-8080",
          "description": "Server name is a unique identifier of the mock server.",
          "minLength": 1
        },
        "route_url": {
          "type": "string",
          "example": "/some-url",
          "description": "Route URL is a relative URI of an route.",
          "minLength": 1
        },
        "id": {
          "type": "string",
          "example": "95423706-1d7c-431b-b182-3b95eb63310b",
          "description": "ID is a unique identifier of an expectation.",
          "minLength": 1
        }
      },
      "required": [
        "server_name",
        "route_url",
        "id"
      ]
    },
    "ExpectationServiceDeleteResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
