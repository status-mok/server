// Code generated by go-swagger; DO NOT EDIT.

package server_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/status-mok/server/e2e/app/http-client/models"
)

// ServerServiceDeleteReader is a Reader for the ServerServiceDelete structure.
type ServerServiceDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ServerServiceDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewServerServiceDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewServerServiceDeleteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewServerServiceDeleteOK creates a ServerServiceDeleteOK with default headers values
func NewServerServiceDeleteOK() *ServerServiceDeleteOK {
	return &ServerServiceDeleteOK{}
}

/*
ServerServiceDeleteOK describes a response with status code 200, with default header values.

A successful response.
*/
type ServerServiceDeleteOK struct {
	Payload *models.ServerServiceDeleteResponse
}

// IsSuccess returns true when this server service delete o k response has a 2xx status code
func (o *ServerServiceDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this server service delete o k response has a 3xx status code
func (o *ServerServiceDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this server service delete o k response has a 4xx status code
func (o *ServerServiceDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this server service delete o k response has a 5xx status code
func (o *ServerServiceDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this server service delete o k response a status code equal to that given
func (o *ServerServiceDeleteOK) IsCode(code int) bool {
	return code == 200
}

func (o *ServerServiceDeleteOK) Error() string {
	return fmt.Sprintf("[POST /server/delete][%d] serverServiceDeleteOK  %+v", 200, o.Payload)
}

func (o *ServerServiceDeleteOK) String() string {
	return fmt.Sprintf("[POST /server/delete][%d] serverServiceDeleteOK  %+v", 200, o.Payload)
}

func (o *ServerServiceDeleteOK) GetPayload() *models.ServerServiceDeleteResponse {
	return o.Payload
}

func (o *ServerServiceDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerServiceDeleteResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewServerServiceDeleteDefault creates a ServerServiceDeleteDefault with default headers values
func NewServerServiceDeleteDefault(code int) *ServerServiceDeleteDefault {
	return &ServerServiceDeleteDefault{
		_statusCode: code,
	}
}

/*
ServerServiceDeleteDefault describes a response with status code -1, with default header values.

ServerServiceDeleteDefault server service delete default
*/
type ServerServiceDeleteDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// Code gets the status code for the server service delete default response
func (o *ServerServiceDeleteDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this server service delete default response has a 2xx status code
func (o *ServerServiceDeleteDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this server service delete default response has a 3xx status code
func (o *ServerServiceDeleteDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this server service delete default response has a 4xx status code
func (o *ServerServiceDeleteDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this server service delete default response has a 5xx status code
func (o *ServerServiceDeleteDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this server service delete default response a status code equal to that given
func (o *ServerServiceDeleteDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ServerServiceDeleteDefault) Error() string {
	return fmt.Sprintf("[POST /server/delete][%d] ServerService_Delete default  %+v", o._statusCode, o.Payload)
}

func (o *ServerServiceDeleteDefault) String() string {
	return fmt.Sprintf("[POST /server/delete][%d] ServerService_Delete default  %+v", o._statusCode, o.Payload)
}

func (o *ServerServiceDeleteDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *ServerServiceDeleteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
